#!/bin/bash

FILE_PATH="/root//popm-address.json"
JSON_FILE="/root//popm-address.json"
DB_HOST="10.19.245.150"
DB_USER="user"
DB_PASS="FbO2O(xQGlbwYEPr"
DB_NAME="DATA"
TABLE_NAME="HEMI"
MACHINE_NAME=$(cat /etc/hostname)
HEMI_DIR="/root/heminetwork_v0.5.0_linux_amd64"
DOWNLOAD_URL="https://github.com/hemilabs/heminetwork/releases/download/v0.5.0/heminetwork_v0.5.0_linux_amd64.tar.gz"
SERVICE_NAME="popmd.service"
SERVICE_FILE="/etc/systemd/system/$SERVICE_NAME"
BINARY_PATH="$HEMI_DIR/popmd"

update_service_status() {
    SERVICE_STATUS=$(systemctl is-active popmd)

    if [ "$SERVICE_STATUS" == "active" ]; then
        STATUS_SYMBOL="üü¢"
    else
        STATUS_SYMBOL="‚ùå"
    fi

    mysql --default-character-set=utf8mb4 -h "$DB_HOST" -u "$DB_USER" -p"$DB_PASS" "$DB_NAME" -e "
        UPDATE $TABLE_NAME SET online='$STATUS_SYMBOL' WHERE name='$(hostname)';
    "
    
    if [ $? -eq 0 ]; then
        echo "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞ popmd –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ $STATUS_SYMBOL –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."
    else
        echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."
    fi
}


check_internet() {
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç..."
    if ping -c 1 -W 5 8.8.8.8 > /dev/null 2>&1; then
        echo -e "\033[32m–ò–Ω—Ç–µ—Ä–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞.\033[0m"
    else
        echo -e "\033[31m–ò–Ω—Ç–µ—Ä–Ω–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ.\033[0m"
        exit 1
    fi
}

install_dependencies() {
    sudo apt update && sudo apt upgrade -y
    sudo apt install jq mysql-client -y
}

check_json_file() {
    if [ -f "$FILE_PATH" ]; then
        echo "–§–∞–π–ª $FILE_PATH —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ."
        extract_json_data
        find_gray_ip
        exit 0
    fi
}

download_and_extract() {
    if [ -d "$HEMI_DIR" ]; then
        echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $HEMI_DIR —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫—É."
    else
        echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $HEMI_DIR –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–∫–∞—á–∏–≤–∞–µ–º –∏ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é..."
        wget "$DOWNLOAD_URL"
        mkdir "$HEMI_DIR"
        tar --strip-components=1 -xzvf $(basename "$DOWNLOAD_URL") -C "$HEMI_DIR"
    fi
}


generate_keys() {
    TMP_JSON_FILE="/tmp/popm-address.json"  # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –≤ /tmp

    if [ -f "$JSON_FILE" ]; then
        echo "–§–∞–π–ª $JSON_FILE —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–ª—é—á–µ–π."
    elif [ -f "$TMP_JSON_FILE" ]; then
        echo "–§–∞–π–ª $TMP_JSON_FILE —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ /tmp. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–ª—é—á–µ–π."
    else
        echo "–§–∞–π–ª $JSON_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –∫–ª—é—á –≤ /tmp..."
        ./keygen -secp256k1 -json -net="testnet" > "$TMP_JSON_FILE"
        if [ $? -eq 0 ]; then
            echo "–ö–ª—é—á —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ $TMP_JSON_FILE."
        else
            echo "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª—é—á–∞."
        fi
    fi
}



extract_json_data() {
    if [[ ! -f "$JSON_FILE" ]];then
        echo "–§–∞–π–ª $JSON_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi

    ETH_ADDRESS=$(jq -r '.ethereum_address' "$JSON_FILE")
    PRIVATE_KEY=$(jq -r '.private_key' "$JSON_FILE")
    PUBLIC_KEY=$(jq -r '.public_key' "$JSON_FILE")
    PUBKEY_HASH=$(jq -r '.pubkey_hash' "$JSON_FILE")
}

find_gray_ip() {
    echo "–ü–æ–∏—Å–∫ —Å–µ—Ä–æ–≥–æ IP-–∞–¥—Ä–µ—Å–∞..."
    GRAY_IP=$(ip -4 -o addr show scope global | awk '/inet 10\.|inet 172\.[1-3][6-9]\.|inet 192\.168\./ {print $4}' | cut -d/ -f1)
    if [[ -z "$GRAY_IP" ]];then
        echo "–°–µ—Ä—ã–π IP –Ω–µ –Ω–∞–π–¥–µ–Ω."
        return 1
    else
        echo "–°–µ—Ä—ã–π IP-–∞–¥—Ä–µ—Å –Ω–∞–π–¥–µ–Ω: $GRAY_IP"
        EXISTING_RECORD=$(mysql -h "$DB_HOST" -u "$DB_USER" -p"$DB_PASS" "$DB_NAME" -se "SELECT COUNT(*) FROM $TABLE_NAME WHERE gray_ip='$GRAY_IP';")
        if [[ "$EXISTING_RECORD" -eq 0 ]];then
            MACHINE_NAME=$(cat /etc/hostname)
            mysql -h "$DB_HOST" -u "$DB_USER" -p"$DB_PASS" "$DB_NAME" <<EOF
INSERT INTO $TABLE_NAME (name, gray_ip) VALUES ('$MACHINE_NAME', '$GRAY_IP');
EOF
            if [[ $? -eq 0 ]];then
                echo "–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö."
            else
                echo "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö."
            fi
        else
            echo "–ó–∞–ø–∏—Å—å —Å —Å–µ—Ä—ã–º IP-–∞–¥—Ä–µ—Å–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."
        fi
        return 0
    fi
}

insert_into_database() {
    EXISTS=$(mysql -h "$DB_HOST" -u "$DB_USER" -p"$DB_PASS" "$DB_NAME" -sse "SELECT COUNT(*) FROM $TABLE_NAME WHERE name='$MACHINE_NAME';")
    if [[ "$EXISTS" -gt 0 ]]; then
        echo "–ó–∞–ø–∏—Å—å —Å –∏–º–µ–Ω–µ–º '$MACHINE_NAME' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö."
        mysql -h "$DB_HOST" -u "$DB_USER" -p"$DB_PASS" "$DB_NAME" <<EOF
UPDATE $TABLE_NAME SET ethereum_address='$ETH_ADDRESS', private_key='$PRIVATE_KEY', public_key='$PUBLIC_KEY', pubkey_hash='$PUBKEY_HASH' WHERE name='$MACHINE_NAME';
EOF
        if [[ $? -eq 0 ]];then
            echo "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."
        else
            echo "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."
        fi
    else
        echo "–ó–∞–ø–∏—Å—å —Å –∏–º–µ–Ω–µ–º '$MACHINE_NAME' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏."
        mysql -h "$DB_HOST" -u "$DB_USER" -p"$DB_PASS" "$DB_NAME" <<EOF
INSERT INTO $TABLE_NAME (name, ethereum_address, private_key, public_key, pubkey_hash) VALUES ('$MACHINE_NAME', '$ETH_ADDRESS', '$PRIVATE_KEY', '$PUBLIC_KEY', '$PUBKEY_HASH');
EOF
        if [[ $? -eq 0 ]];then
            echo "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö."
        else
            echo "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö."
        fi
    fi
}

update_bashrc() {
    echo "export POPM_BTC_PRIVKEY='$PRIVATE_KEY'" >> ~/.bashrc
    echo 'export POPM_STATIC_FEE=50' >> ~/.bashrc
    echo 'export POPM_BFG_URL=wss://testnet.rpc.hemi.network/v1/ws/public' >> ~/.bashrc
    source ~/.bashrc
}

create_service() {
    echo "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ $SERVICE_NAME..."

    NEW_SERVICE_CONTENT=$(cat <<EOL
[Unit]
Description=POPM Daemon
After=network.target

[Service]
Environment=POPM_BFG_URL=wss://testnet.rpc.hemi.network/v1/ws/public
Environment=POPM_BTC_PRIVKEY=$PRIVATE_KEY
Environment=POPM_STATIC_FEE=50
ExecStart=$BINARY_PATH
Restart=always
RestartSec=5
StandardOutput=journal
StandardError=journal
User=root
Environment=POP_ENV=production
LimitCORE=0

[Install]
WantedBy=multi-user.target
EOL
    )

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å –Ω–æ–≤—ã–º
    if [ -f "$SERVICE_FILE" ]; then
        EXISTING_CONTENT=$(cat "$SERVICE_FILE")

        if [ "$NEW_SERVICE_CONTENT" == "$EXISTING_CONTENT" ]; then
            echo "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ –∂–µ –¥–∞–Ω–Ω—ã–µ. –ü–µ—Ä–µ–∑–∞–ø–∏—Å—å –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è."
        else
            echo "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –¥–∞–Ω–Ω—ã–µ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞..."
            echo "$NEW_SERVICE_CONTENT" | sudo tee "$SERVICE_FILE" > /dev/null
            manage_service
        fi
    else
        echo "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞..."
        echo "$NEW_SERVICE_CONTENT" | sudo tee "$SERVICE_FILE" > /dev/null
        manage_service
    fi
}


manage_service() {
    echo "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ systemd..."
    sudo systemctl daemon-reload
    echo "–ó–∞–ø—É—Å–∫ –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ $SERVICE_NAME..."
    sudo systemctl start "$SERVICE_NAME"
    sudo systemctl enable "$SERVICE_NAME"
    sudo systemctl restart "$SERVICE_NAME"
}

main() {
    download_and_extract
    extract_json_data
    create_service
    update_service_status
    check_internet
    check_json_file
    install_dependencies
    generate_keys
    find_gray_ip
    update_bashrc
    manage_service
    insert_into_database
    echo "–°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ."
    echo -e "\033"
}


main
